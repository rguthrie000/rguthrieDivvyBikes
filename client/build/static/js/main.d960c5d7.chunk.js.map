{"version":3,"sources":["utils/tripsAPI.js","utils/geoMath.js","components/SearchForm.js","components/MapCard.js","components/TripsChart.js","App.js","registerServiceWorker.js","index.js","utils/timeSvcs.js"],"names":["tArr","tripsAPI","getKey","cb","axios","get","then","res","data","getStations","stationArr","forEach","s","push","stationId","stationName","docks","stationLat","stationLon","catch","err","console","log","getTrips","stations","searchOptions","queryObj","startStation","list","startIndex","endStation","endIndex","useStartTime","post","t","startTime","tripDuration","concat","length","Object","objectSpread","divvyBox","latLo","latHi","lonLo","lonHi","geoMath","randLat","Math","random","randLon","divvyLimits","findClosestStation","lat","lon","dArr","map","pow","min","minIndex","i","minDist","sqrt","PI","SearchForm","props","react_default","a","createElement","Fragment","id","timeAndDate","isWeekday","partOfDay","className","onClick","whereAmI","htmlFor","value","title","name","author","minStationDist","subject","startName","endName","type","checked","clickStart","onChange","handleClickStart","useTime","handleRadio","useProfile","Station","_ref","text","background","style","color","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","LocStation","_ref2","StartStation","_ref3","EndStation","_ref4","SimpleMap","_ref5","keyVal","centerLat","centerLon","mapClick","defaultProps","center","lng","zoom","lib_default","bootstrapURLKeys","key","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","MapCard_Station","MapCard_LocStation","MapCard_StartStation","MapCard_EndStation","MapCard","_ref6","TripsChart","averageDuration","victory_chart","domainPadding","theme","VictoryTheme","material","victory_axis","tickValues","labels","dependentAxis","tickFormat","x","victory_bar","binTrips","y","stdDevDuration","App","_useState","useState","populated","latitude","longitude","_useState2","slicedToArray","setStations","_useState3","_useState4","setSearchOptions","_useState5","_useState6","setClickStart","_useState7","timeStr","isOvernight","isMorning","isAfternoon","isEvening","_useState8","setTimeAndDate","_useState9","minDuration","maxDuration","_useState10","statsAndCharts","setStatsAndCharts","setKey","setStationsList","closestStation","processTrips","trips","JSON","stringify","sort","b","mean","reduce","total","variance","stdDev","filter","abs","span","baseDuration","durationStep","maxbinCt","countInBin","makeMinutesAndSeconds","bin","floor","clock","tStr","getTimeStr","flagsObj","getTimeFlags","seconds","sec","useEffect","setInterval","components_SearchForm","toPrecision","event","preventDefault","target","defineProperty","TripsChart_TripsChart","components_MapCard","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","DSTfuture","module","exports","Date","now","d","toUTCString","slice","split","wkDay","hr","makeLocalTime","UTC","tzDelta","dateTime","year","monthNameShort","month","monthName","dayOfMonth","dayOfWeek","todArr","hour","minute","second"],"mappings":"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","file":"static/js/main.d960c5d7.chunk.js","sourcesContent":["// tripServer.js - client-side interface to our server\r\n// for retrieval of User info, Stations, and Trips.\r\nimport axios from \"axios\";\r\nlet tArr = [];\r\n\r\nexport default  {\r\n  \r\n  getKey : (cb) => {\r\n    axios.get(\"/api/mapkey\").then( (res) => {\r\n      cb(res.data);\r\n    }\r\n  )},\r\n\r\n  getStations : (cb) => {\r\n  axios.get('/api/stations').then( (res) => { \r\n      let stationArr = [];\r\n      res.data.forEach( (s) => {\r\n        stationArr.push({\r\n          stationId   : s.stationId,\r\n          stationName : s.stationName,\r\n          docks       : s.docks, \r\n          stationLat  : s.stationLat,\r\n          stationLon  : s.stationLon\r\n        });\r\n      })\r\n      cb(stationArr);\r\n   })\r\n   .catch( (err) => console.log(err));\r\n  },\r\n\r\n  // getTrips() \r\n  // expected elements in req.body:\r\n  //   startStation\r\n  //   endStation\r\n  //   useStartTime, and if 1:\r\n  //     startTime\r\n  //     startTol\r\n  //   useGenderMale, and if 1:\r\n  //     genderMale\r\n  //   useBirthYear, and if 1:\r\n  //     birthYear\r\n  //     ageTol\r\n  getTrips : (stations,searchOptions,cb) => {\r\n    let queryObj = {\r\n      startStation : stations.list[stations.startIndex].stationId,\r\n      endStation   : stations.list[stations.endIndex].stationId,\r\n      useStartTime : false\r\n      // startTime    : Date.now() - (364*24*60*60),\r\n      // startTol     : 7*24*3600\r\n    };\r\n    console.log('getTrips 1st query',queryObj);\r\n    tArr = [];\r\n    axios.post(\"/api/trips\", queryObj).then( (res) => {\r\n\r\n      res.data.forEach( (t) => tArr.push({startTime: (t.startTime + 364*24*60*60), tripDuration: t.tripDuration}));\r\n      console.log(`1st query: ${res.data.length} trips`)\r\n      queryObj = {\r\n        ...queryObj,\r\n        startStation : stations.list[stations.endIndex].stationId,\r\n        endStation   : stations.list[stations.startIndex].stationId,\r\n        // startTime    : queryObj.startTime - 364*24*60*60\r\n      };\r\n\r\n      console.log('getTrips 2nd query',queryObj);\r\n      axios.post(\"/api/trips\", queryObj).then( (res) => {\r\n        res.data.forEach( (t) => tArr.push({startTime: (t.startTime + 2*364*24*60*60), tripDuration: t.tripDuration}));\r\n        console.log(`2nd query: ${res.data.length} trips`)\r\n        cb(tArr);\r\n      });\r\n    });\r\n  }\r\n\r\n}","// import {debug} from \"../debug\";\r\n\r\nconst divvyBox = {\r\n  latLo :  41.736646,\r\n  latHi :  42.064854,\r\n  lonLo : -87.774704,\r\n  lonHi : -87.549386\r\n};\r\n\r\nexport default {\r\n    \r\n  randLat : () => (divvyBox.latLo + Math.random()*(divvyBox.latHi - divvyBox.latLo)),\r\n\r\n  randLon : () => (divvyBox.lonLo + Math.random()*(divvyBox.lonHi - divvyBox.lonLo)),\r\n\r\n  divvyLimits : () => divvyBox,\r\n\r\n  findClosestStation(lat,lon,list) {\r\n    let dArr = list.map((s) => ((s.stationLat-lat)**2+(s.stationLon-lon)**2));\r\n    let min = 1e6;\r\n    let minIndex = -1;\r\n    for (let i = 0; i < dArr.length; i++) {\r\n      if (dArr[i] < min) {\r\n        minIndex = i;\r\n        min = dArr[i];\r\n      }\r\n    }\r\n    min = Math.sqrt(min)*(Math.PI/180.0)*3957.66;\r\n    return({minIndex: minIndex, minDist: min});\r\n  }\r\n\r\n};","import React from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm(props) {\n  return (\n    <>\n      <h6 id=\"timedate\">{props.timeAndDate}</h6><h6 id=\"timecat\">{props.isWeekday? 'weekday':'weekend'}, {props.partOfDay}</h6>\n    <div id=\"search-box\">\n        <div>\n          <div id=\"button-random\">\n            <button className=\"button-random\" onClick={props.whereAmI}>random</button>\n          </div>  \n            <label id=\"position-lat-label\" htmlFor=\"position-lat\">Location: lat</label>\n            <div id=\"position-lat\" className=\"number-box\" value={props.title} name=\"position-lat\">\n            <p>{props.lat}</p>  \n            </div>\n            <label id=\"position-lon-label\" htmlFor=\"position-lon\">lon</label>\n            <div id=\"position-lon\" className=\"number-box\" value={props.author} name=\"position-lon\">\n              {props.lon}\n            </div>\n        </div>\n        <p id=\"minDistance\">from this location, {props.minStationDist} miles to:</p>\n        <div>\n            <label id=\"start-station-id-label\" htmlFor=\"start-station-id\">Start Station id & name</label>\n            <div id=\"start-station-id\">{props.startStation}</div>\n            <div\n            id=\"start-station\"\n            className=\"number-box\"\n            value={props.subject}\n            name=\"start-station\"\n            >{props.startName}</div>\n        </div>\n        <div>\n            <label id=\"end-station-id-label\" htmlFor=\"end-station-id\">Destination Station id & name</label>\n            <div id=\"end-station-id\">{props.endStation}</div>\n            <div\n            id=\"end-station\"\n            className=\"form-input\"\n            value={props.subject}\n            name=\"end-station\"\n            >{props.endName}</div>\n        </div>\n    </div>\n        <div id=\"radio-box-location\">\n          <p>Map click:</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"clickStart\"\n                value=\"start\"\n                className=\"form-check-input\"\n                checked={props.clickStart}\n                onChange={props.handleClickStart}\n              />\n              start\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"clickStart\"\n                value=\"end\"\n                className=\"form-check-input\"\n                checked={!props.clickStart}\n                onChange={props.handleClickStart}\n              />\n              destination\n            </label>\n          </div>\n        </div>\n        <div id=\"radio-box-time\">\n          <p>Use day & time?</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useTime\"\n                value=\"yes\"\n                className=\"form-check-input\"\n                checked={props.useTime}\n                onChange={props.handleRadio}\n              />\n              yes\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useTime\"\n                value=\"no\"\n                className=\"form-check-input\"\n                checked={!props.useTime}\n                onChange={props.handleRadio}\n              />\n              no\n            </label>\n          </div>\n        </div>\n        <div id=\"radio-box-profile\">\n          <p>Use user profile?</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useProfile\"\n                value=\"yes\"\n                className=\"form-check-input\"\n                checked={props.useProfile}\n                onChange={props.handleRadio}\n              />\n              yes\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useProfile\"\n                value=\"no\"\n                className=\"form-check-input\"\n                checked={!props.useProfile}\n                onChange={props.handleRadio}\n              />\n              no\n            </label>\n          </div>\n        </div>\n    </>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport \"./MapCard.css\";\n\nconst Station = ({ text, background }) => (\n  <div style={{\n    color: 'white', \n    background: 'gray',\n    padding: '0px 1px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nconst LocStation = ({ text, background }) => (\n  <div style={{\n    color: 'white', \n    background: 'magenta',\n    padding: '0px 1px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nconst StartStation = ({ text, background }) => (\n  <div style={{\n    color: 'white', \n    background: 'green',\n    padding: '0px 1px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nconst EndStation = ({ text, background }) => (\n  <div style={{\n    color: 'white', \n    background: 'red',\n    padding: '0px 1px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  }}>\n    {text}\n  </div>\n);\n\nfunction SimpleMap({keyVal,centerLat,centerLon,stations,startStation,endStation,mapClick}) {\n  const defaultProps = {\n    center: {lat: 41.90075, lng: -87.65},\n    zoom: 11\n  };\n\n  return (\n    <GoogleMapReact\n      onClick={mapClick}\n      // bootstrapURLKeys={{ key: {keyVal} }}\n      bootstrapURLKeys={{ key: 'AIzaSyAcAthdRfN4aH4z75JtzKI3UXDFZxmw_V4'}}\n      defaultCenter={defaultProps.center}\n      defaultZoom={defaultProps.zoom}\n      yesIWantToUseGoogleMapApiInternals\n    >\n      {stations.map((s,i) => (\n        <Station key={i} lat={s.stationLat} lng={s.stationLon} text={'*'} background={'gray'}/>\n      ))}\n      <LocStation   lat={centerLat              } lng={centerLon              } text={'loc'}   />\n      <StartStation lat={startStation.stationLat} lng={startStation.stationLon} text={'start'} />\n      <EndStation   lat={endStation.stationLat  } lng={endStation.stationLon  } text={'dest'}  />\n    </GoogleMapReact> \n  );\n}\n\nfunction MapCard({keyVal,centerLat,centerLon,stations,startStation,endStation,mapClick}) {\n  return (\n    <div id=\"map\" className=\"card mapcard\">\n      <SimpleMap \n        keyVal={keyVal}\n        centerLat={centerLat}\n        centerLon={centerLon}\n        stations={stations}\n        startStation={startStation}\n        endStation={endStation}\n        mapClick={mapClick}\n      />\n    </div>\n  );\n}\n\nexport default MapCard;\n","import React from \"react\";\nimport { \n    VictoryBar, VictoryChart, VictoryAxis, VictoryTheme \n  } from \"victory\";\nimport \"./TripsChart.css\"\n\nexport default function TripsChart(props) {\n  return (\n    <>\n      <div className=\"chart-summary\">\n        Average Ride Time <span id=\"average\">{props.averageDuration}</span>\n      </div>\n      <div id=\"canvas\">\n        <VictoryChart \n          domainPadding={20} \n          theme={VictoryTheme.material} \n        >\n          <VictoryAxis\n            tickValues={props.labels}\n          />\n          <VictoryAxis\n            dependentAxis\n            tickFormat={(x) => (`${x}`)}\n          />\n          <VictoryBar\n            data={props.binTrips}\n            x={\"bin\"}\n            y={\"trips\"}\n          />\n        </VictoryChart>\n      </div>\n      <div className=\"chart-detail\">\n        standard deviation <span id=\"std-dev\">{props.stdDevDuration}</span>\n      </div>\n    </>\n  );\n}\n","import React, {useState, useEffect} from \"react\";\nimport tripsAPI                     from \"./utils/tripsAPI\";\nimport geoMath                      from \"./utils/geoMath\";\nimport SearchForm                   from \"./components/SearchForm\";\nimport MapCard                      from \"./components/MapCard\";\nimport TripsChart                   from \"./components/TripsChart\";\nimport {getTimeStr,getTimeFlags}    from \"./utils/timeSvcs\";\nimport \"./App.css\";\n\n\nfunction App() {\n\n//******************\n//*   State Data   *\n//******************\n  \n  // Station list. A station:\n  // {\n  //   stationId   : < one of 611 numbers in 2..673 (not all values are used) >\n  //   stationName : < string, descriptive of station location, e.g. an intersection or landmark>\n  //   docks       : < bikes capacity >\n  //   stationLat  : < latitude, a real number in 41.736646 - 42.064854, numbers are larger going North>\n  //   stationLon  : < longitude, a real number in -87.774704 - -87.54938625, numbers are more negative going West>\n  // }   \n  const [stations,setStations] = useState({\n    populated      : 0,\n    keyVal         : '',\n    startIndex     : 42,\n    endIndex       : 505,\n    list           : [],\n    latitude       : geoMath.randLat(),\n    longitude      : geoMath.randLon(),\n    minStationDist : 0.0\n  });\n\n  const [searchOptions,setSearchOptions] = useState({\n      useTime    : false,\n      useProfile : false\n  });\n\n  const [clickStart,setClickStart] = useState();\n\n  const [timeAndDate,setTimeAndDate] = useState({\n    timeStr     : '',\n    isWeekday   : 0,\n    isOvernight : 0,\n    isMorning   : 0,\n    isAfternoon : 0,\n    isEvening   : 0\n  });\n\n  const [statsAndCharts,setStatsAndCharts] = useState({\n    minDuration     : '',\n    maxDuration     : '',\n    averageDuration : '',\n    stdDevDuration  : '',\n    labels          : [],\n    binTrips        : []\n  });\n\n//******************\n//*   Functions    *\n//******************\n  \n  // When ready...\n  useEffect( () => {\n      if (!stations.list.length) {\n        setInterval(clock,1000);\n        setClickStart(true);\n        tripsAPI.getKey(setKey);\n        tripsAPI.getStations(setStationsList);\n      }\n    },\n    // no monitoring  \n    []\n  );      \n\n  function setKey(keyVal) {\n    setStations({\n      ...stations,\n      keyVal : keyVal\n    });\n    console.log(`received keyVal ${keyVal}`);\n  }\n\n  function setStationsList(stationArr) {\n    let closestStation = geoMath.findClosestStation(stations.latitude,stations.longitude,stationArr);\n    setStations({\n      ...stations,\n      populated      : stations.populated + 1, \n      list           : stationArr,\n      minStationDist : closestStation.minDist,\n      startIndex     : closestStation.minIndex\n    });\n  }\n\n  function whereAmI(event) {\n    event.preventDefault();\n    let lat = geoMath.randLat();\n    let lng = geoMath.randLon();\n    let closestStation = geoMath.findClosestStation(lat,lng,stations.list);\n    setStations({\n      ...stations,\n      latitude       : lat,\n      longitude      : lng,\n      minStationDist : closestStation.minDist,\n      startIndex     : closestStation.minIndex\n    }); \n    tripsAPI.getTrips(stations,searchOptions,processTrips);\n  }\n\n  function mapClick({x, y, lat, lng}) {\n    // event.preventDefault();\n\n    console.log(x, y, lat, lng)\n    let closestStation = geoMath.findClosestStation(lat,lng,stations.list);\n    setStations({\n      ...stations,\n      latitude       : clickStart ? lat : stations.latitude,\n      longitude      : clickStart ? lng : stations.longitude,\n      minStationDist : clickStart ? closestStation.minDist : stations.minStationDist,\n      startIndex     : clickStart ? closestStation.minIndex : stations.startIndex,\n      endIndex       : clickStart ? stations.endIndex : closestStation.minIndex\n    });  \n    tripsAPI.getTrips(stations,searchOptions,processTrips);\n  }\n\n  // these functions are kept separate so they cleanly match \n  // the database responses.\n  function processTrips(trips) {\n    console.log('pushed to trips ',JSON.stringify(trips));\n    if (trips.length === 0) {\n      setStatsAndCharts({\n        minDuration     : 0,\n        maxDuration     : 0,\n        averageDuration : '--:--',\n        stdDevDuration  : '--:--',\n        binTrips        : []\n      });\n    } else {  \n      // sorting will help with rejection of outliers later\n      console.log('tripStats ', trips.length)\n      trips.sort( (a,b) => a.tripDuration - b.tripDuration);\n      let mean = trips.reduce((total,t) => total + t.tripDuration, 0) / trips.length;\n      console.log(`mean ${mean}`);\n      let variance = trips.reduce((total,t) => total + (t.tripDuration-mean)**2, 0) / (trips.length > 1 ? trips.length-1 : 1);\n      let stdDev = Math.sqrt(variance);\n      console.log(`stdDev ${stdDev}`);\n\n      trips = trips.filter( (t) => Math.abs(t.tripDuration-mean) <= 3.0*stdDev )\n      mean = trips.reduce((total,t) => total + t.tripDuration, 0) / trips.length;\n      console.log(`mean (reduce) ${mean}`);\n      variance = trips.reduce((total,t) => total + (t.tripDuration-mean)**2, 0) / (trips.length > 1 ? trips.length-1 : 1);\n      stdDev = Math.sqrt(variance);\n      console.log(`stdDev (reduce) ${stdDev}`);\n\n      let span = trips[trips.length-1].tripDuration - trips[0].tripDuration;\n      let baseDuration = trips[0].tripDuration;\n      let durationStep = 0.1*span;\n      let maxbinCt = 0;\n      let binTrips = [];\n      let labels = [];\n      let t = 0;\n      for (let b = 0; b < 10 && t < trips.length; b++) {\n        let countInBin = 0;\n        while ((t < trips.length) && (trips[t].tripDuration < (baseDuration + (b+1)*durationStep))) {\n          countInBin++;\n          t++;\n        }\n        if (countInBin > maxbinCt) {\n          maxbinCt = countInBin;\n        }\n        labels.push(`${b % 2 ? '-' : makeMinutesAndSeconds((b + 0.5)*durationStep + baseDuration)}`);\n        binTrips.push({ \n          bin  : b+1, \n          trips: countInBin\n        });\n      }\n      console.log(`baseDuration ${baseDuration} durationStep ${durationStep}`);\n      console.log(`avgD ${mean} s =${Math.floor(mean/60)+':' + mean % 60} stdDev ${stdDev} s = ${Math.floor(stdDev/60)+':' + stdDev % 60}`);\n      console.log(`maxbinCt ${maxbinCt}`,JSON.stringify(binTrips));\n      setStatsAndCharts({\n        minDuration     : trips[0].tripDuration,\n        maxDuration     : trips[trips.length-1].tripDuration,\n        averageDuration : makeMinutesAndSeconds(mean), \n        stdDevDuration  : makeMinutesAndSeconds(stdDev),\n        labels          : labels,\n        binTrips        : binTrips\n      });\n    }\n  }\n\n  function clock() { \n    let tStr = getTimeStr();\n    let flagsObj = getTimeFlags(tStr);\n    setTimeAndDate({\n      timeStr     : tStr,\n      isWeekday   : flagsObj.isWeekday,\n      isOvernight : flagsObj.isOvernight,\n      isMorning   : flagsObj.isMorning,\n      isAfternoon : flagsObj.isAfternoon,\n      isEvening   : flagsObj.isEvening\n    });\n  }\n\n  function handleRadioToggle(event) {\n    event.preventDefault();\n    let name = event.target.name;\n    let value = event.target.value;\n    setSearchOptions({\n      ...searchOptions,\n      [name] : value === 'yes' ? true : false\n    })\n  };\n\n  function handleClickStart(event) {\n    event.preventDefault();\n    let value = event.target.value;\n    setClickStart(value === 'start');\n  }\n\n  function makeMinutesAndSeconds(seconds) {\n    let sec = Math.floor(seconds % 60);\n    let min = Math.floor(seconds / 60);\n    sec = sec < 10? '0'+sec : sec;\n    return(min+':'+sec);\n  }\n\nreturn (\n    <div className=\"container AppBar\">\n      <div className=\"row AppBar-header\">\n        <div id=\"nameBox\">\n            <h5>rguthrie's</h5>\n            <h4>Divvy Bikes Planner</h4>\n\n            <div className=\"smallprint\">\n              <br />\n              <p>copyright &#169; rguthrie, 2020</p>\n            </div>   \n\n        </div>\n        <h1 className=\"AppBar-title\">Bike Chicago!</h1>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-sm-4\">\n          <div className=\"row info-card\">\n            <SearchForm\n              timeAndDate    ={timeAndDate.timeStr}\n              isWeekday      ={timeAndDate.isWeekday}\n              partOfDay      ={\n                timeAndDate.isOvernight ? 'overnight' : (\n                  timeAndDate.isMorning ? 'morning': (\n                    timeAndDate.isEvening?'evening':'afternoon'\n                  )\n                )\n              }\n              lat             ={stations.latitude.toPrecision(8)}\n              lon             ={stations.longitude.toPrecision(8)}\n              startStation    ={stations.populated? stations.list[stations.startIndex].stationId   : ''}\n              startName       ={stations.populated? stations.list[stations.startIndex].stationName : ''}\n              endStation      ={stations.populated? stations.list[stations.endIndex  ].stationId   : ''}\n              endName         ={stations.populated? stations.list[stations.endIndex  ].stationName : ''}\n              minStationDist  ={stations.minStationDist.toPrecision(3)}\n              useTime         ={searchOptions.useTime}\n              useProfile      ={searchOptions.useProfile}\n              whereAmI        ={whereAmI}\n              clickStart      ={clickStart}\n              handleRadio     ={handleRadioToggle}\n              handleClickStart={handleClickStart}\n            />\n          </div>\n          <div className=\"row chart-card\">\n            <TripsChart\n              minDuration    ={statsAndCharts.minDuration}\n              maxDuration    ={statsAndCharts.maxDuration}\n              averageDuration={statsAndCharts.averageDuration}\n              stdDevDuration ={statsAndCharts.stdDevDuration}\n              labels         ={statsAndCharts.labels}\n              binTrips       ={statsAndCharts.binTrips} \n            />\n          </div>\n        </div>\n        <div className=\"col-sm-8\">\n          {stations.startIndex === 42 ? <div></div> :\n            <MapCard \n              keyVal       ={stations.keyVal}\n              centerLat    ={stations.latitude}\n              centerLon    ={stations.longitude}\n              stations     ={stations.populated? stations.list: []}\n              startStation ={stations.populated? stations.list[stations.startIndex] : {}}\n              endStation   ={stations.populated? stations.list[stations.endIndex  ] : {}}\n              mapClick     ={mapClick}\n            />\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","// timeSvcs - utilities for working with time in the Bike Planner\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\n// const DSTpast = [\r\n//   1520755200000,  // '2018-03-11T08:00',\r\n//   1541314800000,  // '2018-11-04T07:00',\r\n//   1552204800000,  // '2019-03-10T08:00',\r\n//   1572764400000,  // '2019-11-03T07:00'\r\n// ];\r\nconst DSTfuture = [\r\n  1583654400000,  // '2020-03-08T08:00',\r\n  1604214000000   // '2020-11-01T07:00',\r\n];\r\n\r\nmodule.exports = {\r\n\r\n  getTimeStr : () => {\r\n  let t = Date.now();\r\n  if (t < DSTfuture[0]) {t -= 6*60*60000;} else\r\n  if (t < DSTfuture[1]) {t -= 5*60*60000;}\r\n  let d = new Date(t);\r\n  d = d.toUTCString();\r\n  return(d.slice(0,25) + ' CT');\r\n},\r\n\r\ngetTimeFlags : (tStr) => {\r\n//  0    1  2   3      4     5 \r\n// Mon, 24 Feb 2020 14:37:02 CT\r\n  let tArr = tStr.split(' ');\r\n  let wkDay = false;\r\n  switch (tArr[0])\r\n  {\r\n    case \"Mon,\":\r\n    case \"Tue,\":\r\n    case \"Wed,\":\r\n    case \"Thu,\":\r\n    case \"Fri,\": wkDay =  true; break;\r\n    case \"Sat,\": \r\n    case \"Sun,\": wkDay = false; break;\r\n    default: break;\r\n  }\r\n  let todArr = tArr[4].split(':');\r\n  let hr = todArr[0];\r\n  let isMorning   = false;\r\n  let isAfternoon = false;\r\n  let isEvening   = false;\r\n  let isOvernight = false;\r\n  if (hr <  6) {isOvernight = true;} else \r\n  if (hr < 12) {isMorning   = true;} else\r\n  if (hr < 18) {isAfternoon = true;} else \r\n               {isEvening   = true;}\r\n  return({\r\n    isWeekday   : wkDay, \r\n    isMorning   : isMorning,\r\n    isAfternoon : isAfternoon,\r\n    isEvening   : isEvening,\r\n    isOvernight : isOvernight\r\n  });\r\n\r\n},\r\n\r\n// makeLocalTime() uses the javascript Date and toUTCString() functions\r\n// to provide elements of date and time, as listed here for var\r\n// dateAndTime.\r\nmakeLocalTime : (UTC,tzDelta) => {\r\n// var dateAndTime =\r\n// {\r\n//   year           : \"\",\r\n//   month          : \"\",\r\n//   monthName      : \"\",\r\n//   monthNameShort : \"\",\r\n//   dayOfMonth     : \"\",\r\n//   dayOfWeek      : \"\",\r\n//   hour           : \"\",\r\n//   minute         : \"\",\r\n//   second         : \"\"\r\n// }\r\n\r\n  var dateTime = {};  // output buffer\r\n  var dateObj = new Date(1000 * (UTC+tzDelta)); // Javascript toUTCString() method can be\r\n  var tString = dateObj.toUTCString();          // given a UTC-compliant time in milliseconds\r\n                                                // and will produce a string like this: \r\n                                                // \"Fri, 13 Dec 2019 07:00:00 GMT\"\r\n  var tArr = tString.split(\" \"); // which we break apart at the spaces\r\n  dateTime.year = tArr[3];\r\n  dateTime.monthNameShort = tArr[2];\r\n  switch (tArr[2])\r\n  {\r\n    case \"Jan\": dateTime.month =  1; dateTime.monthName =   \"January\"; break;\r\n    case \"Feb\": dateTime.month =  2; dateTime.monthName =  \"February\"; break;\r\n    case \"Mar\": dateTime.month =  3; dateTime.monthName =     \"March\"; break;\r\n    case \"Apr\": dateTime.month =  4; dateTime.monthName =     \"April\"; break;\r\n    case \"May\": dateTime.month =  5; dateTime.monthName =       \"May\"; break;\r\n    case \"Jun\": dateTime.month =  6; dateTime.monthName =      \"June\"; break;\r\n    case \"Jul\": dateTime.month =  7; dateTime.monthName =      \"July\"; break;\r\n    case \"Aug\": dateTime.month =  8; dateTime.monthName =    \"August\"; break;\r\n    case \"Sep\": dateTime.month =  9; dateTime.monthName = \"September\"; break;\r\n    case \"Oct\": dateTime.month = 10; dateTime.monthName =   \"October\"; break;\r\n    case \"Nov\": dateTime.month = 11; dateTime.monthName =  \"November\"; break;\r\n    case \"Dec\": dateTime.month = 12; dateTime.monthName =  \"December\"; break;\r\n    default: break;\r\n  }\r\n  dateTime.dayOfMonth = tArr[1];\r\n  switch (tArr[0])\r\n  {\r\n    case \"Mon,\": dateTime.dayOfWeek =    \"Monday\"; break;\r\n    case \"Tue,\": dateTime.dayOfWeek =   \"Tuesday\"; break;\r\n    case \"Wed,\": dateTime.dayOfWeek = \"Wednesday\"; break;\r\n    case \"Thu,\": dateTime.dayOfWeek =  \"Thursday\"; break;\r\n    case \"Fri,\": dateTime.dayOfWeek =    \"Friday\"; break;\r\n    case \"Sat,\": dateTime.dayOfWeek =  \"Saturday\"; break;\r\n    case \"Sun,\": dateTime.dayOfWeek =    \"Sunday\"; break;\r\n    default: break;\r\n  }\r\n  var todArr = tArr[4].split(\":\");  \r\n  dateTime.hour   = todArr[0];\r\n  dateTime.minute = todArr[1];\r\n  dateTime.second = todArr[2];\r\n  return(dateTime);\r\n}\r\n}\r\n\r\n"],"sourceRoot":""}