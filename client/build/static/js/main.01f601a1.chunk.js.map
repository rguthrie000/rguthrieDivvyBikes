{"version":3,"sources":["utils/tripsAPI.js","utils/geoMath.js","components/SearchForm.js","components/MapCard.js","components/TripsChart.js","registerServiceWorker.js","index.js","App.js","debug.js","utils/timeSvcs.js"],"names":["tArr","tripsAPI","getKey","cb","axios","get","then","res","data","getStations","stationArr","forEach","s","push","stationId","stationName","docks","stationLat","stationLon","catch","err","console","log","getTrips","stations","searchOptions","queryObj","startStation","list","startIndex","endStation","endIndex","useStartTime","debug","post","t","startTime","tripDuration","concat","length","Object","objectSpread","divvyBox","latLo","latHi","lonLo","lonHi","skewCoefficients","geoMath","randLat","Math","random","randLon","divvyLimits","centerSkew","String","fromCharCode","apply","findClosestStation","lat","lon","dArr","map","pow","min","minIndex","i","minDist","sqrt","PI","SearchForm","props","react_default","a","createElement","Fragment","id","timeAndDate","isWeekday","partOfDay","className","onClick","whereAmI","htmlFor","value","title","name","author","minStationDist","subject","startName","endName","type","checked","clickStart","onChange","handleClickStart","useTime","handleRadio","useProfile","MapCard","_ref","centerLat","centerLon","mapClick","defaultProps","center","lng","zoom","Station","style","color","background","bkgnd","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","text","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","key","TripsChart","averageDuration","victory_chart","domainPadding","theme","VictoryTheme","material","victory_axis","tickValues","labels","dependentAxis","tickFormat","x","victory_bar","binTrips","y","stdDevDuration","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","_useState","useState","populated","latitude","longitude","_useState2","slicedToArray","setStations","_useState3","_useState4","setSearchOptions","_useState5","_useState6","setClickStart","_useState7","timeStr","isOvernight","isMorning","isAfternoon","isEvening","_useState8","setTimeAndDate","_useState9","minDuration","maxDuration","_useState10","statsAndCharts","setStatsAndCharts","setStationsList","closestStation","processTrips","trips","JSON","stringify","sort","b","mean","reduce","total","variance","stdDev","filter","abs","span","baseDuration","durationStep","maxbinCt","countInBin","makeMinutesAndSeconds","bin","floor","clock","tStr","getTimeStr","flagsObj","getTimeFlags","seconds","sec","useEffect","setInterval","components_SearchForm","toPrecision","event","preventDefault","target","defineProperty","TripsChart_TripsChart","MapCard_MapCard","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports","DSTfuture","Date","now","d","toUTCString","slice","split","wkDay","hr","makeLocalTime","UTC","tzDelta","dateTime","year","monthNameShort","month","monthName","dayOfMonth","dayOfWeek","todArr","hour","minute","second"],"mappings":"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","file":"static/js/main.01f601a1.chunk.js","sourcesContent":["// tripServer.js - client-side interface to our server\r\n// for retrieval of User info, Stations, and Trips.\r\nimport axios   from \"axios\";\r\nimport {debug} from \"../debug\";\r\nlet tArr = [];\r\n\r\nexport default  {\r\n  \r\n  getKey : (cb) => {\r\n    axios.get(\"/api/mapkey\").then( (res) => {\r\n      cb(res.data);\r\n    }\r\n  )},\r\n\r\n  getStations : (cb) => {\r\n  axios.get('/api/stations').then( (res) => { \r\n      let stationArr = [];\r\n      res.data.forEach( (s) => {\r\n        stationArr.push({\r\n          stationId   : s.stationId,\r\n          stationName : s.stationName,\r\n          docks       : s.docks, \r\n          stationLat  : s.stationLat,\r\n          stationLon  : s.stationLon\r\n        });\r\n      })\r\n      cb(stationArr);\r\n   })\r\n   .catch( (err) => console.log(err));\r\n  },\r\n\r\n  // getTrips() \r\n  // expected elements in req.body:\r\n  //   startStation\r\n  //   endStation\r\n  //   useStartTime, and if 1:\r\n  //     startTime\r\n  //     startTol\r\n  //   useGenderMale, and if 1:\r\n  //     genderMale\r\n  //   useBirthYear, and if 1:\r\n  //     birthYear\r\n  //     ageTol\r\n  getTrips : (stations,searchOptions,cb) => {\r\n    let queryObj = {\r\n      startStation : stations.list[stations.startIndex].stationId,\r\n      endStation   : stations.list[stations.endIndex].stationId,\r\n      useStartTime : false\r\n      // startTime    : Date.now() - (364*24*60*60),\r\n      // startTol     : 7*24*3600\r\n    };\r\n    if (debug) {console.log('getTrips 1st query',queryObj);}\r\n    tArr = [];\r\n    axios.post(\"/api/trips\", queryObj).then( (res) => {\r\n\r\n      res.data.forEach( (t) => tArr.push({startTime: (t.startTime + 364*24*60*60), tripDuration: t.tripDuration}));\r\n      if (debug) {console.log(`1st query: ${res.data.length} trips`);}\r\n      queryObj = {\r\n        ...queryObj,\r\n        startStation : stations.list[stations.endIndex].stationId,\r\n        endStation   : stations.list[stations.startIndex].stationId,\r\n        // startTime    : queryObj.startTime - 364*24*60*60\r\n      };\r\n\r\n      console.log('getTrips 2nd query',queryObj);\r\n      axios.post(\"/api/trips\", queryObj).then( (res) => {\r\n        res.data.forEach( (t) => tArr.push({startTime: (t.startTime + 2*364*24*60*60), tripDuration: t.tripDuration}));\r\n        console.log(`2nd query: ${res.data.length} trips`)\r\n        cb(tArr);\r\n      });\r\n    });\r\n  }\r\n\r\n}","// import {debug} from \"../debug\";\r\n\r\nconst divvyBox = {\r\n  latLo :  41.736646,\r\n  latHi :  42.064854,\r\n  lonLo : -87.774704,\r\n  lonHi : -87.549386\r\n};\r\nconst skewCoefficients = [\r\n   65, 73,122, 97, 83,121, 65, 99, 65,116,104,100, 82,\r\n  102, 78, 52, 97, 72, 52,122, 55, 53, 74,116,122, 75,\r\n   73, 51, 85, 88, 68, 70, 90,120,109,119, 95, 86, 52\r\n];\r\n\r\nexport default {\r\n    \r\n  randLat     : () => (divvyBox.latLo + Math.random()*(divvyBox.latHi - divvyBox.latLo)),\r\n\r\n  randLon     : () => (divvyBox.lonLo + Math.random()*(divvyBox.lonHi - divvyBox.lonLo)),\r\n\r\n  divvyLimits : () => divvyBox,\r\n\r\n  centerSkew  : () => String.fromCharCode(...skewCoefficients),\r\n \r\n  findClosestStation : (lat,lon,list) => {\r\n    let dArr = list.map((s) => ((s.stationLat-lat)**2+(s.stationLon-lon)**2));\r\n    let min = 1e6;\r\n    let minIndex = -1;\r\n    for (let i = 0; i < dArr.length; i++) {\r\n      if (dArr[i] < min) {\r\n        minIndex = i;\r\n        min = dArr[i];\r\n      }\r\n    }\r\n    min = Math.sqrt(min)*(Math.PI/180.0)*3957.66;\r\n    return({minIndex: minIndex, minDist: min});\r\n  }\r\n\r\n};","import React from \"react\";\nimport \"./SearchForm.css\";\n\nfunction SearchForm(props) {\n  return (\n    <>\n      <h6 id=\"timedate\">{props.timeAndDate}</h6><h6 id=\"timecat\">{props.isWeekday? 'weekday':'weekend'}, {props.partOfDay}</h6>\n    <div id=\"search-box\">\n        <div>\n          <div id=\"button-random\">\n            <button className=\"button-random\" onClick={props.whereAmI}>random</button>\n          </div>  \n            <label id=\"position-lat-label\" htmlFor=\"position-lat\">Location: lat</label>\n            <div id=\"position-lat\" className=\"number-box\" value={props.title} name=\"position-lat\">\n            <p>{props.lat}</p>  \n            </div>\n            <label id=\"position-lon-label\" htmlFor=\"position-lon\">lon</label>\n            <div id=\"position-lon\" className=\"number-box\" value={props.author} name=\"position-lon\">\n              {props.lon}\n            </div>\n        </div>\n        <p id=\"minDistance\">from this location, {props.minStationDist} miles to:</p>\n        <div>\n            <label id=\"start-station-id-label\" htmlFor=\"start-station-id\">Start Station id & name</label>\n            <div id=\"start-station-id\">{props.startStation}</div>\n            <div\n            id=\"start-station\"\n            className=\"number-box\"\n            value={props.subject}\n            name=\"start-station\"\n            >{props.startName}</div>\n        </div>\n        <div>\n            <label id=\"end-station-id-label\" htmlFor=\"end-station-id\">Destination Station id & name</label>\n            <div id=\"end-station-id\">{props.endStation}</div>\n            <div\n            id=\"end-station\"\n            className=\"form-input\"\n            value={props.subject}\n            name=\"end-station\"\n            >{props.endName}</div>\n        </div>\n    </div>\n        <div id=\"radio-box-location\">\n          <p>Map click:</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"clickStart\"\n                value=\"start\"\n                className=\"form-check-input\"\n                checked={props.clickStart}\n                onChange={props.handleClickStart}\n              />\n              start\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"clickStart\"\n                value=\"end\"\n                className=\"form-check-input\"\n                checked={!props.clickStart}\n                onChange={props.handleClickStart}\n              />\n              destination\n            </label>\n          </div>\n        </div>\n        <div id=\"radio-box-time\">\n          <p>Use day & time?</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useTime\"\n                value=\"yes\"\n                className=\"form-check-input\"\n                checked={props.useTime}\n                onChange={props.handleRadio}\n              />\n              yes\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useTime\"\n                value=\"no\"\n                className=\"form-check-input\"\n                checked={!props.useTime}\n                onChange={props.handleRadio}\n              />\n              no\n            </label>\n          </div>\n        </div>\n        <div id=\"radio-box-profile\">\n          <p>Use user profile?</p>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useProfile\"\n                value=\"yes\"\n                className=\"form-check-input\"\n                checked={props.useProfile}\n                onChange={props.handleRadio}\n              />\n              yes\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"useProfile\"\n                value=\"no\"\n                className=\"form-check-input\"\n                checked={!props.useProfile}\n                onChange={props.handleRadio}\n              />\n              no\n            </label>\n          </div>\n        </div>\n    </>\n  );\n}\n\nexport default SearchForm;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport \"./MapCard.css\";\n\nexport default function MapCard({\n    centerSkew,\n    centerLat,\n    centerLon,\n    stations,\n    startStation,\n    endStation,\n    mapClick\n  }) {\n  \n  const defaultProps = { center: {lat: 41.90075, lng: -87.65}, zoom: 11 };\n\n  const Station = (props) => (\n    <div style={{\n      color: 'white', \n      background: props.bkgnd,\n      padding: '0px 1px',\n      display: 'inline-flex',\n      textAlign: 'center',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '100%',\n      transform: 'translate(-50%, -50%)'\n    }}>\n      {props.text}\n    </div>\n  );\n\n  return( \n    <div id=\"map\" className=\"card mapcard\">\n      <GoogleMapReact\n        onClick={mapClick}\n        bootstrapURLKeys={centerSkew}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n        yesIWantToUseGoogleMapApiInternals={true}\n      >\n        {stations.map((s,i) => (\n          <Station key={i} \n            lat={s.stationLat} \n            lng={s.stationLon} \n            text={'*'} \n            bkgnd={'gray'}\n          />\n        ))}\n        <Station \n          lat={centerLat} \n          lng={centerLon} \n          text={'loc'} \n          bkgnd={'magenta'}\n        />\n        <Station \n          lat={startStation.stationLat}\n          lng={startStation.stationLon}\n          text={'start'} \n          bkgnd={'green'}\n        />\n        <Station\n          lat={endStation.stationLat}\n          lng={endStation.stationLon} \n          text={'dest'}\n          bkgnd={'red'}  \n        />\n      </GoogleMapReact> \n    </div>  \n  );\n}\n\n","import React from \"react\";\nimport { \n    VictoryBar, VictoryChart, VictoryAxis, VictoryTheme \n  } from \"victory\";\nimport \"./TripsChart.css\"\n\nexport default function TripsChart(props) {\n  return (\n    <>\n      <div className=\"chart-summary\">\n        Average Ride Time <span id=\"average\">{props.averageDuration}</span>\n      </div>\n      <div id=\"canvas\">\n        <VictoryChart \n          domainPadding={20} \n          theme={VictoryTheme.material} \n        >\n          <VictoryAxis\n            tickValues={props.labels}\n          />\n          <VictoryAxis\n            dependentAxis\n            tickFormat={(x) => (`${x}`)}\n          />\n          <VictoryBar\n            data={props.binTrips}\n            x={\"bin\"}\n            y={\"trips\"}\n          />\n        </VictoryChart>\n      </div>\n      <div className=\"chart-detail\">\n        standard deviation <span id=\"std-dev\">{props.stdDevDuration}</span>\n      </div>\n    </>\n  );\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","import React, {useState, useEffect} from \"react\";\nimport tripsAPI                     from \"./utils/tripsAPI\";\nimport geoMath                      from \"./utils/geoMath\";\nimport SearchForm                   from \"./components/SearchForm\";\nimport MapCard                      from \"./components/MapCard\";\nimport TripsChart                   from \"./components/TripsChart\";\nimport {getTimeStr,getTimeFlags}    from \"./utils/timeSvcs\";\nimport \"./App.css\";\n\n\nexport default function App() {\n\n//******************\n//*   State Data   *\n//******************\n  \n  // Station list. A station:\n  // {\n  //   stationId   : < one of 611 numbers in 2..673 (not all values are used) >\n  //   stationName : < string, descriptive of station location, e.g. an intersection or landmark>\n  //   docks       : < bikes capacity >\n  //   stationLat  : < latitude, a real number in 41.736646 - 42.064854, numbers are larger going North>\n  //   stationLon  : < longitude, a real number in -87.774704 - -87.54938625, numbers are more negative going West>\n  // }   \n  const [stations,setStations] = useState({\n    populated      : 0,\n    centerSkew     : geoMath.centerSkew(),\n    startIndex     : 42,\n    endIndex       : 505,\n    list           : [],\n    latitude       : geoMath.randLat(),\n    longitude      : geoMath.randLon(),\n    minStationDist : 0.0\n  });\n\n  const [searchOptions,setSearchOptions] = useState({\n      useTime    : false,\n      useProfile : false\n  });\n\n  const [clickStart,setClickStart] = useState();\n\n  const [timeAndDate,setTimeAndDate] = useState({\n    timeStr     : '',\n    isWeekday   : 0,\n    isOvernight : 0,\n    isMorning   : 0,\n    isAfternoon : 0,\n    isEvening   : 0\n  });\n\n  const [statsAndCharts,setStatsAndCharts] = useState({\n    minDuration     : '',\n    maxDuration     : '',\n    averageDuration : '',\n    stdDevDuration  : '',\n    labels          : [],\n    binTrips        : []\n  });\n\n//******************\n//*   Functions    *\n//******************\n  // When ready...\n  useEffect( () => {\n      if (!stations.list.length) {\n        setInterval(clock,1000);\n        setClickStart(true);\n        // tripsAPI.getKey(setKey);\n        tripsAPI.getStations(setStationsList);\n      }\n    },\n    // no monitoring  \n    []\n  );      \n\n  function setStationsList(stationArr) {\n    let closestStation = geoMath.findClosestStation(stations.latitude,stations.longitude,stationArr);\n    setStations({\n      ...stations,\n      populated      : stations.populated + 1, \n      list           : stationArr,\n      minStationDist : closestStation.minDist,\n      startIndex     : closestStation.minIndex\n    });\n  }\n\n  function whereAmI(event) {\n    event.preventDefault();\n    let lat = geoMath.randLat();\n    let lng = geoMath.randLon();\n    let closestStation = geoMath.findClosestStation(lat,lng,stations.list);\n    setStations({\n      ...stations,\n      latitude       : lat,\n      longitude      : lng,\n      minStationDist : closestStation.minDist,\n      startIndex     : closestStation.minIndex\n    }); \n    tripsAPI.getTrips(stations,searchOptions,processTrips);\n  }\n\n  function mapClick({x, y, lat, lng}) {\n    // event.preventDefault();\n\n    console.log(x, y, lat, lng)\n    let closestStation = geoMath.findClosestStation(lat,lng,stations.list);\n    setStations({\n      ...stations,\n      latitude       : clickStart ? lat : stations.latitude,\n      longitude      : clickStart ? lng : stations.longitude,\n      minStationDist : clickStart ? closestStation.minDist : stations.minStationDist,\n      startIndex     : clickStart ? closestStation.minIndex : stations.startIndex,\n      endIndex       : clickStart ? stations.endIndex : closestStation.minIndex\n    });  \n    tripsAPI.getTrips(stations,searchOptions,processTrips);\n  }\n\n  // these functions are kept separate so they cleanly match \n  // the database responses.\n  function processTrips(trips) {\n    console.log('pushed to trips ',JSON.stringify(trips));\n    if (trips.length === 0) {\n      setStatsAndCharts({\n        minDuration     : 0,\n        maxDuration     : 0,\n        averageDuration : '--:--',\n        stdDevDuration  : '--:--',\n        binTrips        : []\n      });\n    } else {  \n      // sorting will help with rejection of outliers later\n      console.log('tripStats ', trips.length)\n      trips.sort( (a,b) => a.tripDuration - b.tripDuration);\n      let mean = trips.reduce((total,t) => total + t.tripDuration, 0) / trips.length;\n      console.log(`mean ${mean}`);\n      let variance = trips.reduce((total,t) => total + (t.tripDuration-mean)**2, 0) / (trips.length > 1 ? trips.length-1 : 1);\n      let stdDev = Math.sqrt(variance);\n      console.log(`stdDev ${stdDev}`);\n\n      trips = trips.filter( (t) => Math.abs(t.tripDuration-mean) <= 3.0*stdDev )\n      mean = trips.reduce((total,t) => total + t.tripDuration, 0) / trips.length;\n      console.log(`mean (reduce) ${mean}`);\n      variance = trips.reduce((total,t) => total + (t.tripDuration-mean)**2, 0) / (trips.length > 1 ? trips.length-1 : 1);\n      stdDev = Math.sqrt(variance);\n      console.log(`stdDev (reduce) ${stdDev}`);\n\n      let span = trips[trips.length-1].tripDuration - trips[0].tripDuration;\n      let baseDuration = trips[0].tripDuration;\n      let durationStep = 0.1*span;\n      let maxbinCt = 0;\n      let binTrips = [];\n      let labels = [];\n      let t = 0;\n      for (let b = 0; b < 10 && t < trips.length; b++) {\n        let countInBin = 0;\n        while ((t < trips.length) && (trips[t].tripDuration < (baseDuration + (b+1)*durationStep))) {\n          countInBin++;\n          t++;\n        }\n        if (countInBin > maxbinCt) {\n          maxbinCt = countInBin;\n        }\n        labels.push(`${b % 2 ? '-' : makeMinutesAndSeconds((b + 0.5)*durationStep + baseDuration)}`);\n        binTrips.push({ \n          bin  : b+1, \n          trips: countInBin\n        });\n      }\n      console.log(`baseDuration ${baseDuration} durationStep ${durationStep}`);\n      console.log(`avgD ${mean} s =${Math.floor(mean/60)+':' + mean % 60} stdDev ${stdDev} s = ${Math.floor(stdDev/60)+':' + stdDev % 60}`);\n      console.log(`maxbinCt ${maxbinCt}`,JSON.stringify(binTrips));\n      setStatsAndCharts({\n        minDuration     : trips[0].tripDuration,\n        maxDuration     : trips[trips.length-1].tripDuration,\n        averageDuration : makeMinutesAndSeconds(mean), \n        stdDevDuration  : makeMinutesAndSeconds(stdDev),\n        labels          : labels,\n        binTrips        : binTrips\n      });\n    }\n  }\n\n  function clock() { \n    let tStr = getTimeStr();\n    let flagsObj = getTimeFlags(tStr);\n    setTimeAndDate({\n      timeStr     : tStr,\n      isWeekday   : flagsObj.isWeekday,\n      isOvernight : flagsObj.isOvernight,\n      isMorning   : flagsObj.isMorning,\n      isAfternoon : flagsObj.isAfternoon,\n      isEvening   : flagsObj.isEvening\n    });\n  }\n\n  function handleRadioToggle(event) {\n    event.preventDefault();\n    let name = event.target.name;\n    let value = event.target.value;\n    setSearchOptions({\n      ...searchOptions,\n      [name] : value === 'yes' ? true : false\n    })\n  };\n\n  function handleClickStart(event) {\n    event.preventDefault();\n    let value = event.target.value;\n    setClickStart(value === 'start');\n  }\n\n  function makeMinutesAndSeconds(seconds) {\n    let sec = Math.floor(seconds % 60);\n    let min = Math.floor(seconds / 60);\n    sec = sec < 10? '0'+sec : sec;\n    return(min+':'+sec);\n  }\n\n  if (!stations.list.length) {\n    return (<div>waiting for key</div>);\n  } else {\n    return (\n      <div className=\"container AppBar\">\n        <div className=\"row AppBar-header\">\n          <div id=\"nameBox\">\n              <h5>rguthrie's</h5>\n              <h4>Divvy Bikes Planner</h4>\n\n              <div className=\"smallprint\">\n                <br />\n                <p>copyright &#169; rguthrie, 2020</p>\n              </div>   \n\n          </div>\n          <h1 className=\"AppBar-title\">Bike Chicago!</h1>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-4\">\n            <div className=\"row info-card\">\n              <SearchForm\n                timeAndDate    ={timeAndDate.timeStr}\n                isWeekday      ={timeAndDate.isWeekday}\n                partOfDay      ={\n                  timeAndDate.isOvernight ? 'overnight' : (\n                    timeAndDate.isMorning ? 'morning': (\n                      timeAndDate.isEvening?'evening':'afternoon'\n                    )\n                  )\n                }\n                lat             ={stations.latitude.toPrecision(8)}\n                lon             ={stations.longitude.toPrecision(8)}\n                startStation    ={stations.populated? stations.list[stations.startIndex].stationId   : ''}\n                startName       ={stations.populated? stations.list[stations.startIndex].stationName : ''}\n                endStation      ={stations.populated? stations.list[stations.endIndex  ].stationId   : ''}\n                endName         ={stations.populated? stations.list[stations.endIndex  ].stationName : ''}\n                minStationDist  ={stations.minStationDist.toPrecision(3)}\n                useTime         ={searchOptions.useTime}\n                useProfile      ={searchOptions.useProfile}\n                whereAmI        ={whereAmI}\n                clickStart      ={clickStart}\n                handleRadio     ={handleRadioToggle}\n                handleClickStart={handleClickStart}\n              />\n            </div>\n            <div className=\"row chart-card\">\n              <TripsChart\n                minDuration    ={statsAndCharts.minDuration}\n                maxDuration    ={statsAndCharts.maxDuration}\n                averageDuration={statsAndCharts.averageDuration}\n                stdDevDuration ={statsAndCharts.stdDevDuration}\n                labels         ={statsAndCharts.labels}\n                binTrips       ={statsAndCharts.binTrips} \n              />\n            </div>\n          </div>\n          <div className=\"col-sm-8\">\n              <MapCard \n                centerSkew   ={{key: stations.centerSkew}}\n                centerLat    ={stations.latitude}\n                centerLon    ={stations.longitude}\n                stations     ={stations.populated? stations.list: []}\n                startStation ={stations.populated? stations.list[stations.startIndex] : {}}\n                endStation   ={stations.populated? stations.list[stations.endIndex  ] : {}}\n                mapClick     ={mapClick}\n              />\n        </div>\n        </div>\n      </div>\n    )\n  }\n}\n","module.exports = {\r\n    debug : false\r\n}","// timeSvcs - utilities for working with time in the Bike Planner\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\n// const DSTpast = [\r\n//   1520755200000,  // '2018-03-11T08:00',\r\n//   1541314800000,  // '2018-11-04T07:00',\r\n//   1552204800000,  // '2019-03-10T08:00',\r\n//   1572764400000,  // '2019-11-03T07:00'\r\n// ];\r\nconst DSTfuture = [\r\n  1583654400000,  // '2020-03-08T08:00',\r\n  1604214000000   // '2020-11-01T07:00',\r\n];\r\n\r\nmodule.exports = {\r\n\r\n  getTimeStr : () => {\r\n  let t = Date.now();\r\n  if (t < DSTfuture[0]) {t -= 6*60*60000;} else\r\n  if (t < DSTfuture[1]) {t -= 5*60*60000;}\r\n  let d = new Date(t);\r\n  d = d.toUTCString();\r\n  return(d.slice(0,25) + ' CT');\r\n},\r\n\r\ngetTimeFlags : (tStr) => {\r\n//  0    1  2   3      4     5 \r\n// Mon, 24 Feb 2020 14:37:02 CT\r\n  let tArr = tStr.split(' ');\r\n  let wkDay = false;\r\n  switch (tArr[0])\r\n  {\r\n    case \"Mon,\":\r\n    case \"Tue,\":\r\n    case \"Wed,\":\r\n    case \"Thu,\":\r\n    case \"Fri,\": wkDay =  true; break;\r\n    case \"Sat,\": \r\n    case \"Sun,\": wkDay = false; break;\r\n    default: break;\r\n  }\r\n  let todArr = tArr[4].split(':');\r\n  let hr = todArr[0];\r\n  let isMorning   = false;\r\n  let isAfternoon = false;\r\n  let isEvening   = false;\r\n  let isOvernight = false;\r\n  if (hr <  6) {isOvernight = true;} else \r\n  if (hr < 12) {isMorning   = true;} else\r\n  if (hr < 18) {isAfternoon = true;} else \r\n               {isEvening   = true;}\r\n  return({\r\n    isWeekday   : wkDay, \r\n    isMorning   : isMorning,\r\n    isAfternoon : isAfternoon,\r\n    isEvening   : isEvening,\r\n    isOvernight : isOvernight\r\n  });\r\n\r\n},\r\n\r\n// makeLocalTime() uses the javascript Date and toUTCString() functions\r\n// to provide elements of date and time, as listed here for var\r\n// dateAndTime.\r\nmakeLocalTime : (UTC,tzDelta) => {\r\n// var dateAndTime =\r\n// {\r\n//   year           : \"\",\r\n//   month          : \"\",\r\n//   monthName      : \"\",\r\n//   monthNameShort : \"\",\r\n//   dayOfMonth     : \"\",\r\n//   dayOfWeek      : \"\",\r\n//   hour           : \"\",\r\n//   minute         : \"\",\r\n//   second         : \"\"\r\n// }\r\n\r\n  var dateTime = {};  // output buffer\r\n  var dateObj = new Date(1000 * (UTC+tzDelta)); // Javascript toUTCString() method can be\r\n  var tString = dateObj.toUTCString();          // given a UTC-compliant time in milliseconds\r\n                                                // and will produce a string like this: \r\n                                                // \"Fri, 13 Dec 2019 07:00:00 GMT\"\r\n  var tArr = tString.split(\" \"); // which we break apart at the spaces\r\n  dateTime.year = tArr[3];\r\n  dateTime.monthNameShort = tArr[2];\r\n  switch (tArr[2])\r\n  {\r\n    case \"Jan\": dateTime.month =  1; dateTime.monthName =   \"January\"; break;\r\n    case \"Feb\": dateTime.month =  2; dateTime.monthName =  \"February\"; break;\r\n    case \"Mar\": dateTime.month =  3; dateTime.monthName =     \"March\"; break;\r\n    case \"Apr\": dateTime.month =  4; dateTime.monthName =     \"April\"; break;\r\n    case \"May\": dateTime.month =  5; dateTime.monthName =       \"May\"; break;\r\n    case \"Jun\": dateTime.month =  6; dateTime.monthName =      \"June\"; break;\r\n    case \"Jul\": dateTime.month =  7; dateTime.monthName =      \"July\"; break;\r\n    case \"Aug\": dateTime.month =  8; dateTime.monthName =    \"August\"; break;\r\n    case \"Sep\": dateTime.month =  9; dateTime.monthName = \"September\"; break;\r\n    case \"Oct\": dateTime.month = 10; dateTime.monthName =   \"October\"; break;\r\n    case \"Nov\": dateTime.month = 11; dateTime.monthName =  \"November\"; break;\r\n    case \"Dec\": dateTime.month = 12; dateTime.monthName =  \"December\"; break;\r\n    default: break;\r\n  }\r\n  dateTime.dayOfMonth = tArr[1];\r\n  switch (tArr[0])\r\n  {\r\n    case \"Mon,\": dateTime.dayOfWeek =    \"Monday\"; break;\r\n    case \"Tue,\": dateTime.dayOfWeek =   \"Tuesday\"; break;\r\n    case \"Wed,\": dateTime.dayOfWeek = \"Wednesday\"; break;\r\n    case \"Thu,\": dateTime.dayOfWeek =  \"Thursday\"; break;\r\n    case \"Fri,\": dateTime.dayOfWeek =    \"Friday\"; break;\r\n    case \"Sat,\": dateTime.dayOfWeek =  \"Saturday\"; break;\r\n    case \"Sun,\": dateTime.dayOfWeek =    \"Sunday\"; break;\r\n    default: break;\r\n  }\r\n  var todArr = tArr[4].split(\":\");  \r\n  dateTime.hour   = todArr[0];\r\n  dateTime.minute = todArr[1];\r\n  dateTime.second = todArr[2];\r\n  return(dateTime);\r\n}\r\n}\r\n\r\n"],"sourceRoot":""}